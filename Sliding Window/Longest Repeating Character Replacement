class Solution:
    def characterReplacement(self, s: str, k: int) -> int:
        left = 0 
        right = 0
        l = len(s)
        maxFrequency = 0
        dictMap = {}
        res = 0
        
            
        while right < l:
            if s[right] not in dictMap:
                dictMap[s[right]] = 1
                
                maxFrequency = max(maxFrequency,dictMap[s[right]])
                if right -left - maxFrequency <k:
                    res = max(res,right-left+1)
                else:
                    dictMap[s[left]] -=1
                    if dictMap[s[left]] == 0:
                        dictMap.pop(s[left])
                    left+=1
            else:
                dictMap[s[right]] += 1
                maxFrequency = max(maxFrequency,dictMap[s[right]])
                if right -left - maxFrequency <k:
                    res = max(res,right-left+1)
                else:
                    dictMap[s[left]] -=1
                    if dictMap[s[left]] == 0:
                        dictMap.pop(s[left])
                    left+=1
            right+=1
        return(res)
